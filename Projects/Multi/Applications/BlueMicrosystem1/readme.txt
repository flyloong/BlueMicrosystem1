/**
******************************************************************************
* File    readme.txt  
* Version V3.0.0
* Date    01-June-2016
******************************************************************************
* Attention
*
* COPYRIGHT(c) 2016 STMicroelectronics
*
* Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
* You may not use this file except in compliance with the License.
* You may obtain a copy of the License at:
*
*        http://www.st.com/software_license_agreement_liberty_v2
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*   1. Redistributions of source code must retain the above copyright notice,
*      this list of conditions and the following disclaimer.
*   2. Redistributions in binary form must reproduce the above copyright notice,
*      this list of conditions and the following disclaimer in the documentation
*      and/or other materials provided with the distribution.
*   3. Neither the name of STMicroelectronics nor the names of its contributors
*      may be used to endorse or promote products derived from this software
*      without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
******************************************************************************
*/

Application Description 

 This firmware package includes Components Device Drivers, Board Support Package
 and example application for the following STMicroelectronics elements:
 - X-NUCLEO-IDB04A1/X-NUCLEO-IDB05A1 Bluetooth Low energy expansion boards
 - X-NUCLEO-IKS01A1 Expansion board for four MEMS sensor devices:
       HTS221, LPS25H, LSM6DS0, LSM6DS3, LIS3MDL
 - NUCLEO-F401RE NUCLEO-L476RG Nucleo boards
 - STEVAL-STLCS01V1 (SensorTile) evaluation board that contains the following MEMS sensor devices:
      HTS221, LPS22HB, LSM303, LSM6DSM
 - The osxMotionFX (iNEMOEngine PRO) suite uses advanced algorithms to integrate outputs
 from multiple MEMS sensors in a smartway, independent of environmental conditions,
 to reach optimal performance. Real-time motion-sensor data fusion is set to significantly
 improve the user experience, increasing accuracy, resolution, stability and response time.
 - osxMotionAR (iNEMOEngine PRO) software provides real-time activity recognition data 
 using MEMS accelerometer sensor
 - osxMotionCP (iNEMOEngine PRO) software provides carry Position recognition data 
 using MEMS accelerometer sensor
 - osxMotionGR (iNEMOEngine PRO) software provides carry Gesture recognition data 
 using MEMS accelerometer sensor
 - osxMotionPM (iNEMOEngine PRO) software provides Pedometer recognition data 
 using MEMS accelerometer sensor


 The Example application initizializes all the Components and Library creating 4 Custom Bluetooth services:
 - The first service exposes all the HW characteristics related to MEMS sensor devices: Temperature, Humidity,
 Pressure, Magnetometer, Gyroscope and Accelleromenter, LED status
 - The second service exposes the SW characteristic: the quaternions generated by the osXMotionFX library 
 in short precision, the activity recognized using the osxMotionAR algorithm, the carry position
 recognized using the osxMotionCP algorithm, the Gesture recognized using the osxMotionGR and the Steps and frequency with osxMotionPM
 - The Third Service exposes the console services where we have stdin/stdout and stderr capabilities
 - The last Service is used for configuration purpose

 For NUCLEO boards the example application allows the user to control the initialization phase via UART.
 Launch a terminal application and set the UART port to 460800 bps, 8 bit, No Parity,
 1 stop bit.

 This example must be used with the related BlueMS Android/iOS application available on Play/itune store,
 in order to read the sent information by Bluetooth Low Energy protocol

                              -------------------
                              | VERY IMPORTANT: |
                              -------------------
 1) This example support the Firmware-Over-The-Air (FOTA) update and the osxMotion License activation OTA 
 using the BlueMS Android/iOS application (Version 3.0.0 and above).
 The FOTA does not work when using X-NUCLEO-IDB04A1
 2) This example must run starting at address 0x08004000 in memory and works ONLY if the BootLoader 
 is saved at the beginning of the FLASH (address 0x08000000)
 3) Before Flash a different package that uses the Licenses Manager it's necessary to cleanup the Licenses saved 
 on FLASH because they could be not compatible

The Magneto Calibration provided by osxMotionFX (INEMOEngine PRO) will be saved in in FLASH.
In this way it's not necessary to make again the calibration at every STM32 Nucleo board reset.

For avoiding accidental erasure of the calibration data, for forcing a new calibration it is necessary to press 
the blue user button on the STM32 Nucleo board 3 times in less than 2 seconds.

The osxMotionFX library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
(the "OSX-M1 License"). You may obtain a copy of the OSX License at: 

Middlewares\ST\STM32_OSX_MotionFX_Library\OpenSoftwareX_LLA_evaluation_10Nov2014.pdf

The osxMotionAR library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
(the "OSX-M1 License"). You may obtain a copy of the OSX License at: 

Middlewares\ST\STM32_OSX_MotionAR_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

The osxMotionCP library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
(the "OSX-M1 License"). You may obtain a copy of the OSX License at: 

Middlewares\ST\STM32_OSX_MotionCP_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

The osxMotionGR library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
(the "OSX-M1 License"). You may obtain a copy of the OSX License at: 

Middlewares\ST\STM32_OSX_MotionGR_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

The osxMotionPM library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
(the "OSX-M1 License"). You may obtain a copy of the OSX License at: 

Middlewares\ST\STM32_OSX_MotionPM_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf


@par Hardware and Software environment

  - This example runs on Sensor expansion board attached to STM32F401RE/STM32L476RG devices
    can be easily tailored to any other supported device and development board.
    Or it runs on STEVAL-STLCS01V1 (SensorTile) evaluation board
    
  - This example must be used with the related BlueMS Android/iOS application available on Play/itune store,
    in order to read the sent information by Bluetooth Low Energy protocol

@par STM32Cube packages:
  - STM32F4xx drivers from STM32CubeF4 V1.12.0
  - STM32L4xx drivers from STM32CubeL4 V1.3.0
@par X-CUBE packages:
  - X-CUBE-BLE1 V2.6.0
  - X-CUBE-MEMS1 V2.1.0

@par How to use it ? 

This package contains projects for 3 IDEs viz. IAR, µVision and System Workbench. 
In order to make the  program work, you must do the following:
 - WARNING: before opening the project with any toolchain be sure your folder
   installation path is not too in-depth since the toolchain may report errors
   after building.
- WARNING: Sensor Fusion library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionFX Release Notes in order to know how to get a valid license
- WARNING: Activity Recognition library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionAR Release Notes in order to know how to get a valid license
- WARNING: Carry position Recognition library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionCP Release Notes in order to know how to get a valid license

For IAR:
 - Open IAR toolchain (this firmware has been successfully tested with
   Embedded Workbench V7.40.3).
 - Open the IAR project file EWARM\STM32F401RE-Nucleo\BlueMS1_NF4.eww EWARM\STM32L476RG-Nucleo\BlueMS1_NL4.eww orEWARM\STM32L476RG-SensorTile\BlueMS1_ST.eww
 - Rebuild all files and load your image into target memory.
 - Run the example.

For µVision:
 - Open µVision V5.12.0.0 toolchain (this firmware has been 
   successfully tested with MDK-ARM Professional Version: 5.15.0).
 - Open the µVision project file MDK-ARM\STM32F401RE-Nucleo\Project.uvprojx or MDK-ARM\STM32L476RG-Nucleo\Project.uvprojx or  MDK-ARM\STM32L476RG-SensorTile\Project.uvprojx
 - Rebuild all files and load your image into target memory.
 - Run the example.
 
For System Workbench:
 - Open System Workbench for STM32 (this firmware has been 
   successfully tested with System Workbench for STM32 Version 1.7.0.201602121829).
 - Set the default workspace proposed by the IDE (please be sure that there are not spaces in the workspace path).
 - Press "File" -> "Import" -> "Existing Projects into Workspace"; press "Browse" in the "Select root directory" and choose the path where the System
   Workbench project is located (it should be SW4STM32\STM32F401RE-Nucleo\ or SW4STM32\STM32L476RG-Nucleo\ or SW4STM32\STM32L476RG-SensorTile\). 
 - Rebuild all files and load your image into target memory.
 - Run the example.

 /******************* (C) COPYRIGHT 2016 STMicroelectronics *****END OF FILE****/